version: 2.1
orbs:
  slack: circleci/slack@4.1
executors:
  golang-executor:
    docker:
      - image: gcr.io/gcr-for-testing/golang:1.20.5
  machine-executor:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
aliases:
  - &notify_slack_on_fail
    slack/notify:
      channel: 'C056RL4BXG9' #status-go channel
      event: fail
      template: basic_fail_1

parameters:
  run-tests:
    type: boolean
    default: false
  run-migration-tests:
    type: boolean
    default: false

jobs:
  check-code:
    executor: golang-executor
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: make tools fmt license linter
      - *notify_slack_on_fail

  run-tests:
    executor: machine-executor
    parameters:
      test-to-run:
        type: string
        default: "run-unit-tests"
    steps:
      - checkout
      - run: make << pipeline.parameters.test-to-run >>
    environment:
      TEST_RESOURCES: "$HOME/resources/"
      ARANGODB: gcr.io/gcr-for-testing/arangodb/enterprise-preview:devel-nightly
      VERBOSE: 1
      GOIMAGE: gcr.io/gcr-for-testing/golang:1.20.7
      ALPINE_IMAGE: gcr.io/gcr-for-testing/alpine:3.17
      STARTER: arangodb/arangodb-starter:latest
      TEST_DISALLOW_UNKNOWN_FIELDS: false

  download-demo-data:
    executor: machine-executor
    steps:
      - run:
          name: Download itzpapalotl demo foxx service
          command: |
            if ! [ -f "$HOME/resources/itzpapalotl-v1.2.0.zip" ]; then
              curl -L0 -o $HOME/resources/itzpapalotl-v1.2.0.zip "https://github.com/arangodb-foxx/demo-itzpapalotl/archive/v1.2.0.zip"
            fi

workflows:
  run_tests:
    jobs:
      - run-tests:
          name: Test V1 single
          requires:
            - download-demo-data
          test-to-run: run-tests-single
      - run-tests:
          name: Test V2 single
          requires:
            - download-demo-data
          test-to-run: run-v2-tests-single

  version: 2
